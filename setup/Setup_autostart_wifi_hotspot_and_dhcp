Настройка точки доступа WiFi.

Самый первый шаг, конечно же устанавливаем hostapd:

sudo apt-get install hostapd

Настройка:

Правим содержимое файла конфигурации /etc/default/hostapd:

sudo nano /etc/default/hostapd.conf

В нём раскомментировать строку вида (Это путь к файлу конфигурации демона hostapd):
DAEMON_CONF="/etc/hostapd/hostapd.conf"

Настраиваем конфиг для hostapd:

sudo nano /etc/hostapd/hostapd.conf

Содержание файла /etc/hostapd/hostapd.conf:

interface=wlan0
driver=nl80211
ssid=WIFI
hw_mode=g
#ieee80211n=1 
#Раскомментировать для включения режима n
#ht_capab=[HT40-][SHORT-GI-40] 
#Раскомментировать для включения режима n
channel=6
wpa=2
wpa_passphrase=11111111
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP
auth_algs=1
macaddr_acl=0

Пробуем запустить в терминале командой:

sudo hostapd -d /etc/hostapd/hostapd.conf

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
В случае если получаем ошибку в стиле:
"Configuration file: hostapd.conf
nl80211: Could not configure driver mode
nl80211 driver initialization failed.
hostapd_free_hapd_data: Interface wlan0 wasn't started"

То необходимо отключить Network Manager для интерфейса, который должен запускаться с hostapd.
Для этого правим конфиг NetworkManager.conf:

sudo nano /etc/NetworkManager/NetworkManager.conf

Необходимо добавить следующее содержимое в файл /etc/NetworkManager/NetworkManager.conf: 

[keyfile]
unmanaged-devices=mac:xx:xx:xx:xx:xx:xx

#где: xx:xx:xx:xx:xx:xx - MAC wifi устройства
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Конфиг автоматически проверяется перед запуском, так что — смело пробуйте запустить hostapd. Команды управления:

# /etc/init.d/hostapd start 
# /etc/init.d/hostapd stop 
# /etc/init.d/hostapd restart 

На подключающемся устройстве настраиваем, скажем, 192.168.0.2, а на компьютере:

sudo ip addr add 192.168.0.1/24 dev wlan0


////////////////////////////////////////////////////////////////////////////////////////

Настроить сетевой интерфейс, на котором будет работать dnsmasq. На самом деле — очень важный шаг, который пропускают многие в своих мануалах по настройке DHCP-серверов. Дело в том, что компьютеру, на котором работает DHCP-сервер, необходимо прописать статический адрес — кто выдаст адрес DHCP-серверу, если он сам не может запуститься без адреса, а адрес себе он выдать не может, потому что не запущен?

Открываем для редактирования файл /etc/network/interfaces и добавляем туда абзац вида:

auto wlan0
iface wlan0 inet static
address 192.168.0.1
netmask 255.255.255.0 
gateway 192.168.0.1

Сохраняем и перезапускаем наш сетевой интерфейс, на котором настроен DHCP:
ifdown wlan0
ifup wlan0

Проверяем состояние, сверяем настройки с теми, что должны быть:
ifconfig wlan0

////////////////////////////////////////////////////////////////////////////////////////

Нужно создать условия для работы сервера — создать пользователя для того, чтобы под ним запускать dnsmasq, прописать в системных настройках DNS-сервера, к которым dnsmasq будет обращаться и ещё пару мелочей.
Прописываем DNS сервера Гугла. Правда, первой строчкой у нас будет localhost. Это сделано для того, чтобы остальные системные приложения на нашем же сервере, когда им надо получить адрес от DNS-сервера, обращались сначала к dnsmasq, а не к Гуглу. Ну а dnsmasq достаточно умён, чтобы игнорировать эту строчку:

sudo nano /etc/resolv.conf

Содержимое файла /etc/resolv.conf:

nameserver 127.0.0.1
nameserver 192.168.0.1

Нужно защитить это файл от перезаписи при каждом запуске системы. Перезаписывает его dhclient, если что. Честно говоря, блокировка от записи — лишь один из способов того, как не допустить перезапись =) Есть и другие, но этот самый простой:

chattr +i /etc/resolv.conf

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Если не получилось тогда - устанавливаем пакет resolvconf:
sudo apt-get install resolvconf

Единственное, что нужно для того, чтобы прописать статический адрес DNS для системы — отредактировать /etc/resolvconf/resolv.conf.d/base, вписав туда всё, что мы бы вписали в /etc/resolv.conf:

nameserver 127.0.0.1
nameserver 192.168.0.1

перезапускаем сервис resolvconf:
sudo service resolvconf reload
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Добавляем группу и пользователя:

sudo groupadd -r dnsmasq
sudo useradd -r -g dnsmasq dnsmasq

Ставим Dnsmasq, он запускается и готов к работе, но мы его отключаем — ещё не настроен, нечего ему тут делать:

sudo apt-get install dnsmasq
sudo service dnsmasq stop

Настраиваем конфигурацию DNS:

sudo vim /etc/dnsmasq.conf

Содержимое файла /etc/dnsmasq.conf:

# Заставим dnsmasq запускаться исключительно под пользователем dnsmasq
user=dnsmasq
group=dnsmasq
##
# Настраиваем DNS. Не нужен - смело выкидываем эту часть.
##
# Настройка DNS - чтобы отключить DNS, поставьте тут 0.
# Если же хотите расположить DNS на нестандартном порту - что ж, располагайте.
port=53

# Размер кэша. Число обозначает количество хранимых доменных имён.
cache-size=1000

# Не спрашивать у внешнего DNS про имена без точки вроде homeserver, user-pc и прочие - 
# ему и так плохо, бедному, а ещё мы тут со своими заведомо локальными адресами...
domain-needed
# Что-то вроде предыдущего, тоже не даёт обращаться к глобальным DNS-серверам со всякой нелепицей в запросе
bogus-priv

# Интерфейс для приёма DHCP и DNS запросов.
interface=wlan0
# А вот этого интерфейса избегать, как чумы:
except-interface=ppp0 
# На всякий случай, мало ли глюк и сервер реально будет раздавать на ppp0, размахивая своим dhcp-authoritative.

##
# Настраиваем DHCP. НЕ нужен - смело выкидываем эту часть.
##
# Одна из самых главных строчек:
# она своим лишь присутствием запускает DHCP-сервер,
# заодно передавая ему размер пула адресов 
# 12h значит то, что срок аренды адреса по умолчанию - 12 часов.
# Соответственно, 12m - 12 минут, всё просто.
dhcp-range=192.168.0.10,192.168.0.150,12h

# Статический адрес. Указаны только MAC и IP:
dhcp-host=40:9f:38:36:e3:19,192.168.0.2 # KV33-ADM-N01
dhcp-host=50:B7:C3:B5:A5:67,192.168.0.3 # RR
dhcp-host=68:14:01:94:2B:4F,192.168.0.4 # Ubuntu ROS
# Статический адрес. Указаны MAC, hostname, IP и индивидуальное время аренды.
# Да-да, вы поняли тему =) Всё решается одной строчкой:
#dhcp-host=11:22:33:44:55:66,fred,192.168.0.60,45m

# Заблокировать выдачу IP-адреса для этого MAC-адреса:
#dhcp-host=11:22:33:44:55:66,ignore
# Я лучше заблокирую - не, ну он выглядит реально подозрительно!

# Объявляем, что наш сервер - властитель нашей локальной сети и ни один другой не может быть подобным ему.
# НЕ ДЕЛАЙТЕ ЭТОГО, если есть такие же самопровозглашённые претенденты на трон - 
# можно порушить королевство, где выдаются IP-адреса
# А вот для моего сервера это необходимо, чтобы уменьшить время получения IP для устройств.
#dhcp-authoritative

Запускаем сервис DNS командой:

sudo service dnsmasq start
